name: build

on:
  push:
    tags:
      - "*"

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
    steps:
      # The `fetch-depth: 0` is important to fetch all the tags
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version
        id: vars
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

  build-macos:
    runs-on: macos-latest
    needs: [version]
    env:
      MACOSX_DEPLOYMENT_TARGET: 14
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Create macOS binaries
        uses: ./.github/actions/macos-all

  build-linux-x64:
    runs-on: ubuntu-latest
    needs: [version]
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Create Linux AMD64 binaries
        uses: ./.github/actions/linux-x64

  build-linux-arm64:
    runs-on: ubuntu-24.04-arm
    needs: [version]
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Create Linux ARM64 binaries
        uses: ./.github/actions/linux-arm64

  build-windows-x64:
    runs-on: windows-latest
    needs: [version]
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Create Windows binaries
        uses: ./.github/actions/windows-x64

  build-windows-arm64:
    runs-on: windows-11-arm
    needs: [version]
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Create Windows binaries
        uses: ./.github/actions/windows-arm64

  release:
    runs-on: ubuntu-latest
    needs: [build-macos, build-linux-x64, build-linux-arm64, build-windows-x64, build-windows-arm64]
    permissions:
      contents: write
    steps:
      # The `fetch-depth: 0` is important to fetch all the tags
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Fetch artifact
        uses: actions/download-artifact@v4
        with:
          path: binaries
          merge-multiple: true

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ needs.version.outputs.VERSION }}
          tag: ${{ needs.version.outputs.VERSION }}
          body: "New release"
          replacesArtifacts: true
          artifacts: binaries/*.zip